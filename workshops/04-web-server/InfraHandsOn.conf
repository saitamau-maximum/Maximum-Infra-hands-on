server {
    # 80番ポートでリクエストを受け付ける
    listen 80;
    server_name ;# サーバーのIPアドレスまたはドメイン名
    # 例: server_name 192.168.123.8;

    root ;# ビルドした静的ファイルの置き場所
    # 例: root /var/www/InfraHandsOn;

    index ;# デフォルトで表示するファイルの設定
    # 例: index index.html;

    # / にマッチングするリクエストを処理する設定
    location / {
        # try_files はリクエストされたファイルが存在するか確認し，ない場合はデフォルトのものを返す
        try_files ;
        # 例: try_files $uri /index.html;
        # 来たリクエスト"$uri"が存在する場合はそれを返し，存在しない場合には /index.html を返す
    }
    
    # 以下、バックエンド向けのリクエストをさばく設定

    # チャット機能のWebsocket用設定
    # /api/ws/ にマッチングするリクエストを処理する設定
    # Websocketのアップグレードを行うための設定
    location /api/ws/ {
        proxy_pass ; # リクエストをどこにリバースプロキシするか
        # 例: proxy_pass http://localhost:8080;

        proxy_http_version 1.1; # HTTPバージョンを1.1に設定
        # ヘッダー設定（Websocketのアップグレードに必要なヘッダーを設定）
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # リクエストヘッダーを設定
        # もともとのリクエストのホスト名やIPアドレスを保持するための設定
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API用の設定
    # /api にマッチングするリクエストを処理する設定
    location /api {
        proxy_pass ; # リクエストをどこにリバースプロキシするか
        # 例: proxy_pass http://localhost:8080;

        # リクエストヘッダーを設定
        # もともとのリクエストのホスト名やIPアドレスを保持するための設定
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
